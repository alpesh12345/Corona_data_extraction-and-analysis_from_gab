# -*- coding: utf-8 -*-
"""btp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C9w6OssLOcSlTZzUdTlJuNgp_qM1DlWU
"""

from google.colab import drive
drive.mount('/content/drive')

import json
import glob

!pip install selenium

!pip install webdriver_manager

from bs4 import BeautifulSoup
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
#chrome_options.add_argument("--headless")
from selenium.webdriver.common.keys import Keys
import time
import random
from selenium.common.exceptions import TimeoutException
import os

# getting list of 
data_files = glob.glob("/content/drive/MyDrive/result/*")
all_data = []
for data_file in data_files:
  data_fil=json.load(open(data_file, 'r'))
  for data in data_fil:
    if('government' in data['content'] or 'lockdown' in data['content']):
      if data not in all_data:
        all_data.append(data)

print(len(all_data))

print(all_data[len(all_data)-150])

!pip install -U textblob
!python -m textblob.download_corpora

sentiment_data=[]
from textblob import TextBlob
for data in all_data:
  blob = TextBlob(data['content'])
  sum=0
  for sentence in blob.sentences:
      sum=sum+(sentence.sentiment.polarity)
  if len(blob.sentences):
    sentiment_data.append([ data['created_at'], data['url'], sum/len(blob.sentences) ])
  else:
    sentiment_data.append([ data['created_at'],data[url],0])
print(sentiment_data[1])

print(len(sentiment_data))

import csv
with open('sentiment.csv', 'w', newline='') as file:
    writer = csv.writer(file)
    writer.writerow(["Date","Link to gab", "Sentiment Score"])
    writer.writerows(sentiment_data)

only_score=[]
for lis in sentiment_data:
  only_score.append(lis[2])
only_score.sort()

print(only_score)

import matplotlib.pyplot as plt
  
plt.plot(range(0,len(only_score)), only_score)
plt.title('Sentiment Score of Gabs about government lockdown')
plt.xlabel('Gabs')
plt.ylabel('Score')
plt.show()

pos=0
neg=0
neu=0
for lit in only_score:
  if(lit < 0):
    neg=neg+1
  elif(lit > 0):
    pos=pos+1
  else:
    neu=neu+1
print('positive : ' + str(pos) + '\n' )
print('negative : ' + str(neg) + '\n' )
print('neutral : ' + str(neu) + '\n' )

result = ['Positive','Neutral','Negative']
no_of_gabs = [12608,6978,8365]

xAxis = [i + 0.5 for i, _ in enumerate(result)]
  
plt.bar(xAxis, no_of_gabs, color='teal')
plt.title('Favor vs Against Government Policy', fontsize=14)
plt.xlabel('Sentiment', fontsize=14)
plt.ylabel('No. of gabs', fontsize=14)
plt.xticks([i + 0.5 for i, _ in enumerate(result)], result)
plt.show()

"""**Geographical analysis of sentiments:**"""

for data_f in data_files:
  if 'lockdown' in data_f:
    data_f1=json.load(open(data_f, 'r'))
    new_data=[]
    poss=0
    negg=0
    neuu=0
    for data in data_f1:
      blob = TextBlob(data['content'])
      sum=0
      for sentence in blob.sentences:
        sum=sum+(sentence.sentiment.polarity)
      if len(blob.sentences):
        new_data.append([data['url'],sum/len(blob.sentences)])
        if (sum/len(blob.sentences) < 0):
          negg+=1
        elif (sum/len(blob.sentences) > 0):
          poss+=1
        else:
          neuu+=1
      else:
        new_data.append([data[url],0])
        neuu+=1
    print('Data for : ' + data_f + '\n' )
    print('positive : ' + str(poss) + '\n' )
    print('negative : ' + str(negg) + '\n' )
    print('neutral : ' + str(neuu) + '\n' )  
    with open(data_f+'.csv', 'w', newline='') as file:
      writer = csv.writer(file)
      writer.writerow(["Link to gab", "Sentiment Score"])
      writer.writerows(new_data)
    only_score1=[]
    for liss in new_data:
      only_score1.append(liss[1])
    only_score1.sort()
    result = ['Positive','Neutral','Negative']
    no_of_gabs = [poss,neuu,negg]

    xAxis = [i + 0.5 for i, _ in enumerate(result)]
      
    plt.bar(xAxis, no_of_gabs, color='teal')
    plt.title('Favor vs Against Government Policy for ' + data_f , fontsize=14)
    plt.xlabel('Sentiment', fontsize=14)
    plt.ylabel('No. of gabs', fontsize=14)
    plt.xticks([i + 0.5 for i, _ in enumerate(result)], result)
    plt.show()

    plt.plot(range(0,len(only_score1)), only_score1)
    plt.title('Sentiment Score of Gabs about government lockdown' + data_f)
    plt.xlabel('Gabs')
    plt.ylabel('Score')
    plt.show()

"""**Temporal** **analysis**"""

temp_ana=[]
sentiment_data.sort()
print(sentiment_data[10])

temp_ana1=[]
temp_ana2=[]

for datt in sentiment_data:
  temp_ana1.append(datt[0])
  temp_ana2.append((datt[2]))

from pandas import DataFrame
import matplotlib.pyplot as plt
     
plt.scatter(temp_ana1,temp_ana2)#range(0,len(temp_ana2))
plt.title('Temporal analysis', fontsize=14)
plt.xlabel('Created_date', fontsize=14)
plt.ylabel('Sentiment score', fontsize=14)
#plt.grid(True)
plt.show()

"""**Geographical Analysis for India**"""

india_data=[]
india_score=[]
poss=0
negg=0
neuu=0
for data_filll in data_files:
  data_f3=json.load(open(data_filll, 'r'))
  for data in data_f3:
      if ('india' in data['content']):
        if data not in india_data:
          india_data.append(data)
          blob = TextBlob(data['content'])
          sum=0
          for sentence in blob.sentences:
            sum=sum+(sentence.sentiment.polarity)
          if len(blob.sentences):
            india_score.append([data['url'],sum/len(blob.sentences)])
            if (sum/len(blob.sentences) < 0):
              negg+=1
            elif (sum/len(blob.sentences) > 0):
              poss+=1
            else:
              neuu+=1
          else:
            india_score.append([data[url],0])
            neuu+=1
print('Data for India related Covid gabs \n' )
print('positive : ' + str(poss) + '\n' )
print('negative : ' + str(negg) + '\n' )
print('neutral : ' + str(neuu) + '\n' )  
with open('india_score.csv', 'w', newline='') as file:
  writer = csv.writer(file)
  writer.writerow(["Link to gab", "Sentiment Score"])
  writer.writerows(india_score)
only_score5=[]
for liss in india_score:
  only_score5.append(liss[1])
only_score5.sort()
result = ['Positive','Neutral','Negative']
no_of_gabs = [poss,neuu,negg]

xAxis = [i + 0.5 for i, _ in enumerate(result)]
  
plt.bar(xAxis, no_of_gabs, color='teal')
plt.title('Favor vs Against Government Policy for ' + 'India' , fontsize=14)
plt.xlabel('Sentiment', fontsize=14)
plt.ylabel('No. of gabs', fontsize=14)
plt.xticks([i + 0.5 for i, _ in enumerate(result)], result)
plt.show()

plt.plot(range(0,len(only_score5)), only_score5)
plt.title('Sentiment Score of Gabs for ' + 'India')
plt.xlabel('Gabs')
plt.ylabel('Score')
plt.show()

us_data=[]
us_score=[]
poss=0
negg=0
neuu=0
for data_filll in data_files:
  data_f3=json.load(open(data_filll, 'r'))
  for data in data_f3:
      if (' US ' in data['content'] or 'USA ' in data['content'] or 'United States' in data['content']):
        if data not in us_data:
          us_data.append(data)
          blob = TextBlob(data['content'])
          sum=0
          for sentence in blob.sentences:
            sum=sum+(sentence.sentiment.polarity)
          if len(blob.sentences):
            us_score.append([data['url'],sum/len(blob.sentences)])
            if (sum/len(blob.sentences) < 0):
              negg+=1
            elif (sum/len(blob.sentences) > 0):
              poss+=1
            else:
              neuu+=1
          else:
            us_score.append([data[url],0])
            neuu+=1
print('Data for US related Covid gabs \n' )
print('positive : ' + str(poss) + '\n' )
print('negative : ' + str(negg) + '\n' )
print('neutral : ' + str(neuu) + '\n' )  
with open('US_score.csv', 'w', newline='') as file:
  writer = csv.writer(file)
  writer.writerow(["Link to gab", "Sentiment Score"])
  writer.writerows(us_score)
only_score6=[]
for liss in us_score:
  only_score6.append(liss[1])
only_score6.sort()
result = ['Positive','Neutral','Negative']
no_of_gabs = [poss,neuu,negg]

xAxis = [i + 0.5 for i, _ in enumerate(result)]
  
plt.bar(xAxis, no_of_gabs, color='teal')
plt.title('Favor vs Against Government Policy for ' + 'US' , fontsize=14)
plt.xlabel('Sentiment', fontsize=14)
plt.ylabel('No. of gabs', fontsize=14)
plt.xticks([i + 0.5 for i, _ in enumerate(result)], result)
plt.show()

plt.plot(range(0,len(only_score6)), only_score6)
plt.title('Sentiment Score of Gabs for ' + 'US')
plt.xlabel('Gabs')
plt.ylabel('Score')
plt.show()